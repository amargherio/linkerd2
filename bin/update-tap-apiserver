#!/bin/bash

set -eu

bindir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
rootdir="$( cd $bindir/.. && pwd )"

os=$(go env GOOS)
arch=$(go env GOARCH)

builder_version=v1.12.alpha.4
kubebuilder_version=2.0.0-beta.0

mkdir -p ${rootdir}/.tap-apiserver-gen/apiserver-builder
curl -sL https://github.com/kubernetes-incubator/apiserver-builder-alpha/releases/download/${builder_version}/apiserver-builder-alpha-${builder_version}-${os}-${arch}.tar.gz | tar -xz -C ${rootdir}/.tap-apiserver-gen/apiserver-builder
apiserver_boot=${rootdir}/.tap-apiserver-gen/apiserver-builder/bin/apiserver-boot

curl -sL https://go.kubebuilder.io/dl/${kubebuilder_version}/${os}/${arch} | tar -xz -C ${rootdir}/.tap-apiserver-gen
# for tests
export PATH=$PATH:${rootdir}/.tap-apiserver-gen/kubebuilder_${kubebuilder_version}_${os}_${arch}/bin

mkdir -p $GOPATH/src/github.com/linkerd/linkerd2

cat << EOF > $GOPATH/src/github.com/linkerd/linkerd2/boilerplate.go.txt
/*
Copyright YEAR The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
EOF

cd $GOPATH/src/github.com/linkerd/linkerd2
${apiserver_boot} -h
${apiserver_boot} init repo --domain linkerd.io
${apiserver_boot} create group version --group tap --version v1alpha1
${apiserver_boot} create group version resource --group tap --version v1alpha1 --kind Tap --resource deployments
${apiserver_boot} create subresource --subresource tap --group tap --version v1alpha1 --kind Tap --resource tap





${apiserver_boot} create group version resource --group tap --version v1alpha1 --kind Tap --resource deployments/tap

${apiserver_boot} create subresource --subresource tap --group tap --version v1alpha1 --kind Tap --resource deployments



${apiserver_boot} create group --group deployments






${apiserver_boot} create group version resource --non-namespaced=true --group <group> --version <version> --kind <Kind>
${apiserver_boot} create subresource --subresource tap --group tap --version v1alpha1 --kind Tap --resource tap


${apiserver_boot} run local
















GO111MODULE=on go mod vendor
git clone https://github.com/kubernetes/code-generator.git vendor/k8s.io/code-generator
# check out code-generator at the revision Gopkg.lock had previously referenced
git -C vendor/k8s.io/code-generator checkout aae79feb89bdded3679da91fd8c19b6dfcbdb79a

# ROOT_PACKAGE :: the package that is the target for code generation
ROOT_PACKAGE="github.com/linkerd/linkerd2"
# CUSTOM_RESOURCE_NAME :: the name of the custom resource that we're generating client code for
CUSTOM_RESOURCE_NAME="serviceprofile"
# CUSTOM_RESOURCE_VERSION :: the version of the resource
CUSTOM_RESOURCE_VERSION="v1alpha2"

bindir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
rootdir="$( cd $bindir/.. && pwd )"

# run the code-generator entrypoint script
${rootdir}/vendor/k8s.io/code-generator/generate-groups.sh all "$ROOT_PACKAGE/controller/gen/client" "$ROOT_PACKAGE/controller/gen/apis" "$CUSTOM_RESOURCE_NAME:$CUSTOM_RESOURCE_VERSION"
